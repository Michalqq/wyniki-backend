{"version":3,"file":"main.849a8aeff70ae17f1559.js","mappings":"sqCAQO,IAAMA,EAAe,SAACC,GAC3B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,KAA0BC,EAAAA,EAAAA,YAA1B,GAAOC,EAAP,KAAcC,EAAd,KACA,KAA0BF,EAAAA,EAAAA,YAA1B,GAAOG,EAAP,KAAcC,EAAd,KACA,KAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,GAAOK,EAAP,KAAgBC,EAAhB,KAYA,OACE,uBAAKC,UAAU,iBACb,uBAAKA,UAAU,gBACb,uBAAKA,UAAU,8BACb,uBAAKA,UAAU,8BACb,gBAAC,IAAD,CAAMA,UAAU,eACd,gBAAC,WAAD,CAAaA,UAAU,4BAAvB,qBAGA,gBAAC,SAAD,KACE,wBAAMC,SApBC,SAACC,GACpBH,GAAW,GACXF,IACAK,EAAMC,kBACNC,EAAAA,EAAAA,IAAoBV,GAAO,SAACW,GAC1BR,EAASQ,GACTN,GAAW,QAeC,gBAAC,IAAD,CACEO,MAAM,QACNC,KAAK,QACLC,aAAc,SAACC,GACbd,EAASc,EAAEC,OAAOC,OAClBd,KAEFe,KAAK,EACLD,MAAOjB,EACPmB,KAAK,QACLC,UAAU,EACVC,aAAa,iBAEdnB,GAAS,mCAAOA,EAAP,MACTE,GACC,2BACE,gBAAC,IAAD,CACEkB,UAAU,SACVC,QAAQ,YACRC,KAAK,QAIX,gBAAC,IAAD,CACElB,UAAW,YACXiB,QAAQ,UACRJ,KAAK,UAHP,mBASJ,gBAAC,WAAD,CAAab,UAAU,cAAvB,gBAEE,qBAAGmB,KAAK,SAASC,MAAM,IAAIC,QAAS,kBAAM9B,EAAS,YAAnD,sBAYhB","sources":["webpack://javascript/./src/components/page/auth/ReminderPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { InputLabeled } from \"../../common/InputLabeled\";\r\nimport { fetchRemindPassword } from \"../../utils/fetchUtils\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const RegisterPage = (props) => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState();\r\n  const [error, setError] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    setLoading(true);\r\n    setError();\r\n    event.preventDefault();\r\n    fetchRemindPassword(email, (response) => {\r\n      setError(response);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"u-text-center\">\r\n      <div className=\"u-box-shadow\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-lg-4 pb-3 u-box-shadow\">\r\n            <Card className=\"text-center\">\r\n              <Card.Header className=\"bg-dark-green text-white\">\r\n                Resetowanie hasła\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <form onSubmit={handleSubmit}>\r\n                  <InputLabeled\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    handleChange={(e) => {\r\n                      setEmail(e.target.value);\r\n                      setError();\r\n                    }}\r\n                    big={true}\r\n                    value={email}\r\n                    type=\"email\"\r\n                    required={true}\r\n                    autoComplete=\"new-password\"\r\n                  />\r\n                  {error && <p>{`${error}.`}</p>}\r\n                  {loading && (\r\n                    <div>\r\n                      <Spinner\r\n                        animation=\"border\"\r\n                        variant=\"secondary\"\r\n                        size=\"lg\"\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  <Button\r\n                    className={\"px-4 mt-2\"}\r\n                    variant=\"success\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Resetuj hasło\r\n                  </Button>\r\n                </form>\r\n              </Card.Body>\r\n              <Card.Footer className=\"text-muted\">\r\n                {`Masz konto - `}\r\n                <a role=\"button\" class=\"a\" onClick={() => navigate(`/login`)}>\r\n                  zaloguj się\r\n                </a>\r\n              </Card.Footer>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"names":["RegisterPage","props","navigate","useNavigate","useState","email","setEmail","error","setError","loading","setLoading","className","onSubmit","event","preventDefault","fetchRemindPassword","response","label","name","handleChange","e","target","value","big","type","required","autoComplete","animation","variant","size","role","class","onClick"],"sourceRoot":""}