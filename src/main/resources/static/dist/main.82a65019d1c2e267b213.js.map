{"version":3,"file":"main.82a65019d1c2e267b213.js","mappings":"g3DASO,IAAMA,EAAe,SAACC,GAC3B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,KAAwBC,EAAAA,EAAAA,UAAS,CAC/BC,SAAU,GACVC,SAAU,KACVC,UAAW,KACXC,MAAO,KAJT,GAAOC,EAAP,KAAaC,EAAb,KAMA,KAAkCN,EAAAA,EAAAA,YAAlC,GAAOO,EAAP,KAAkBC,EAAlB,KACA,KAA0BR,EAAAA,EAAAA,YAA1B,GAAOS,EAAP,KAAcC,EAAd,KACA,KAA8BV,EAAAA,EAAAA,WAAS,GAAvC,GAAOW,EAAP,KAAgBC,EAAhB,KAgBMC,EAAe,SAACC,GACpBR,EAAQ,EAAD,KAAMD,GAAN,QAAaS,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SAC3B,aAAtBH,EAAMC,OAAOC,MAA6C,cAAtBF,EAAMC,OAAOC,MACnDN,KAYJ,OACE,uBAAKQ,UAAU,iBACb,uBAAKA,UAAU,gBACb,uBAAKA,UAAU,8BACb,uBAAKA,UAAU,8BACb,gBAAC,IAAD,CAAMA,UAAU,eACd,gBAAC,WAAD,CAAaA,UAAU,4BAAvB,eAGA,gBAAC,SAAD,KACE,wBAAMC,SAnBC,SAACL,GACpBA,EAAMM,iBACFf,EAAKH,WAAaG,EAAKF,WArB3BS,GAAW,GACXS,IAAAA,KAAA,WACWC,EAAAA,EAAAA,MADX,gBACuCjB,GACpCkB,MAAK,SAACC,GACLhB,EAAagB,EAAIC,KAAKxB,UACtBW,GAAW,MAEZc,OAAM,SAACC,GACNjB,EAASiB,EAAIC,SAASH,MACtBb,GAAW,OAabF,EAAS,8BAiBG,gBAAC,IAAD,CACEmB,MAAM,QACNb,KAAK,WACLH,aAAcA,EACdiB,KAAK,EACLb,MAAOZ,EAAKJ,SACZ8B,UAAU,EACVC,aAAa,iBAEf,gBAAC,IAAD,CACEH,MAAM,QACNb,KAAK,QACLH,aAAcA,EACdiB,KAAK,EACLb,MAAOZ,EAAKD,MACZ2B,UAAU,EACVE,KAAM,QACND,aAAa,iBAEf,gBAAC,IAAD,CACEH,MAAM,QACNb,KAAK,WACLH,aAAcA,EACdiB,KAAK,EACLb,MAAOZ,EAAKH,SACZ+B,KAAK,WACLF,UAAU,EACVC,aAAa,iBAEf,gBAAC,IAAD,CACEH,MAAM,gBACNb,KAAK,YACLH,aAAcA,EACdiB,KAAK,EACLb,MAAOZ,EAAKF,UACZ8B,KAAK,WACLF,UAAU,IAEXxB,GACC,+DAAmCA,IAEpCE,GAAS,mCAAOA,EAAP,MACTE,GACC,2BACE,gBAAC,IAAD,CACEuB,UAAU,SACVC,QAAQ,YACRC,KAAK,QAIX,gBAAC,IAAD,CACElB,UAAW,YACXiB,QAAQ,UACRF,KAAK,UAHP,iBASJ,gBAAC,WAAD,CAAaf,UAAU,cAAvB,gBAEE,qBACEmB,KAAK,SACLnB,UAAU,IACVoB,QAAS,kBAAMxC,EAAS,YAH1B,sBAgBhB","sources":["webpack://javascript/./src/components/page/auth/RegisterPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport axios from \"axios\";\r\nimport { InputLabeled } from \"../../common/InputLabeled\";\r\nimport { backendUrl } from \"../../utils/fetchUtils\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const RegisterPage = (props) => {\r\n  const navigate = useNavigate();\r\n  const [user, setUser] = useState({\r\n    username: \"\",\r\n    password: null,\r\n    password2: null,\r\n    email: \"\",\r\n  });\r\n  const [registred, setRegistred] = useState();\r\n  const [error, setError] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const registerUser = () => {\r\n    setLoading(true);\r\n    axios\r\n      .post(`${backendUrl()}/auth/signup`, user)\r\n      .then((res) => {\r\n        setRegistred(res.data.username);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setError(err.response.data);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setUser({ ...user, [event.target.name]: event.target.value });\r\n    if (event.target.name === \"password\" || event.target.name === \"password2\")\r\n      setError();\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (user.password !== user.password2) {\r\n      setError(\"Wprowadź jednakowe hasła\");\r\n      return;\r\n    }\r\n    registerUser();\r\n  };\r\n\r\n  return (\r\n    <div className=\"u-text-center\">\r\n      <div className=\"u-box-shadow\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-lg-4 pb-3 u-box-shadow\">\r\n            <Card className=\"text-center\">\r\n              <Card.Header className=\"bg-dark-green text-white\">\r\n                Rejestracja\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <form onSubmit={handleSubmit}>\r\n                  <InputLabeled\r\n                    label=\"Login\"\r\n                    name=\"username\"\r\n                    handleChange={handleChange}\r\n                    big={true}\r\n                    value={user.username}\r\n                    required={true}\r\n                    autoComplete=\"new-password\"\r\n                  />\r\n                  <InputLabeled\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    handleChange={handleChange}\r\n                    big={true}\r\n                    value={user.email}\r\n                    required={true}\r\n                    type={\"email\"}\r\n                    autoComplete=\"new-password\"\r\n                  />\r\n                  <InputLabeled\r\n                    label=\"Hasło\"\r\n                    name=\"password\"\r\n                    handleChange={handleChange}\r\n                    big={true}\r\n                    value={user.password}\r\n                    type=\"password\"\r\n                    required={true}\r\n                    autoComplete=\"new-password\"\r\n                  />\r\n                  <InputLabeled\r\n                    label=\"Powtórz hasło\"\r\n                    name=\"password2\"\r\n                    handleChange={handleChange}\r\n                    big={true}\r\n                    value={user.password2}\r\n                    type=\"password\"\r\n                    required={true}\r\n                  />\r\n                  {registred && (\r\n                    <p>{`Zarejestrowano użytkownika: ${registred}`}</p>\r\n                  )}\r\n                  {error && <p>{`${error}.`}</p>}\r\n                  {loading && (\r\n                    <div>\r\n                      <Spinner\r\n                        animation=\"border\"\r\n                        variant=\"secondary\"\r\n                        size=\"lg\"\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  <Button\r\n                    className={\"px-4 mt-2\"}\r\n                    variant=\"success\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Zarejestruj\r\n                  </Button>\r\n                </form>\r\n              </Card.Body>\r\n              <Card.Footer className=\"text-muted\">\r\n                {`Masz konto - `}\r\n                <a\r\n                  role=\"button\"\r\n                  className=\"a\"\r\n                  onClick={() => navigate(`/login`)}\r\n                >\r\n                  zaloguj się\r\n                </a>\r\n              </Card.Footer>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"names":["RegisterPage","props","navigate","useNavigate","useState","username","password","password2","email","user","setUser","registred","setRegistred","error","setError","loading","setLoading","handleChange","event","target","name","value","className","onSubmit","preventDefault","axios","backendUrl","then","res","data","catch","err","response","label","big","required","autoComplete","type","animation","variant","size","role","onClick"],"sourceRoot":""}