{"version":3,"file":"main.7dc9672c2d6c2c2db44d.js","mappings":"s3DASO,IAAMA,EAAoB,SAACC,GAChC,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,KAAwBC,EAAAA,EAAAA,UAAS,CAC/BC,OAAOC,EAAAA,EAAAA,MAAcC,OACrBC,SAAU,GACVC,SAAU,GACVC,UAAW,KAJb,GAAOC,EAAP,KAAaC,EAAb,KAMA,KAA0BR,EAAAA,EAAAA,YAA1B,GAAOS,EAAP,KAAcC,EAAd,KACA,KAA8BV,EAAAA,EAAAA,WAAS,GAAvC,GAAOW,EAAP,KAAgBC,EAAhB,KAqBMC,EAAe,SAACC,GACpBN,EAAQ,EAAD,KAAMD,GAAN,QAAaO,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,UAUvD,OACE,uBAAKC,UAAU,iBACb,uBAAKA,UAAU,gBACb,uBAAKA,UAAU,8BACb,uBAAKA,UAAU,8BACb,gBAAC,IAAD,CAAMA,UAAU,eACd,gBAAC,WAAD,CAAaA,UAAU,4BAAvB,oBAGA,gBAAC,SAAD,KACE,wBAAMC,SAlBC,SAACL,GACpBA,EAAMM,iBACFb,EAAKF,WAAaE,EAAKD,WAvB3BM,GAAW,GACXF,IACAW,IAAAA,KAAA,WACWC,EAAAA,EAAAA,MADX,wBAC+Cf,GAC5CgB,MAAK,SAACC,GACc,MAAfA,EAAIC,OACNf,EAAS,sDAETA,EAASc,EAAIE,MAEfd,GAAW,MAEZe,OAAM,SAACC,GACNlB,EAASkB,EAAIC,SAASH,MACtBd,GAAW,OAUbF,EAAS,8BAgBG,gBAAC,IAAD,CACEoB,MAAM,QACNd,KAAK,WACLH,aAAcA,EACdkB,KAAK,EACLd,MAAOV,EAAKF,SACZ2B,KAAK,WACLC,UAAU,EACVC,aAAa,iBAEf,gBAAC,IAAD,CACEJ,MAAM,gBACNd,KAAK,YACLH,aAAcA,EACdkB,KAAK,EACLd,MAAOV,EAAKD,UACZ0B,KAAK,WACLC,UAAU,EACVC,aAAa,iBAEdzB,GAAS,mCAAOA,IAChBE,GACC,2BACE,gBAAC,IAAD,CACEwB,UAAU,SACVC,QAAQ,YACRC,KAAK,QAIX,gBAAC,IAAD,CACEnB,UAAW,YACXkB,QAAQ,UACRJ,KAAK,UAHP,uBASJ,gBAAC,WAAD,CAAad,UAAU,cAAvB,gBAEE,qBACEoB,KAAK,SACLpB,UAAU,IACVqB,QAAS,kBAAMzC,EAAS,YAH1B,sBAgBhB","sources":["webpack://javascript/./src/components/page/auth/ResetPasswordPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport axios from \"axios\";\r\nimport { InputLabeled } from \"../../common/InputLabeled\";\r\nimport { backendUrl } from \"../../utils/fetchUtils\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nexport const ResetPasswordPage = (props) => {\r\n  const navigate = useNavigate();\r\n  const [user, setUser] = useState({\r\n    token: useLocation().search,\r\n    username: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n  const [error, setError] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const updatePassword = () => {\r\n    setLoading(true);\r\n    setError();\r\n    axios\r\n      .post(`${backendUrl()}/auth/updatePassword`, user)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setError(\"Hasło zostało zaktualizowane. Proszę się zalogować\");\r\n        } else {\r\n          setError(res.data);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setError(err.response.data);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setUser({ ...user, [event.target.name]: event.target.value });\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (user.password !== user.password2) {\r\n      setError(\"Wprowadź jednakowe hasła\");\r\n      return;\r\n    }\r\n    updatePassword();\r\n  };\r\n  return (\r\n    <div className=\"u-text-center\">\r\n      <div className=\"u-box-shadow\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-lg-4 pb-3 u-box-shadow\">\r\n            <Card className=\"text-center\">\r\n              <Card.Header className=\"bg-dark-green text-white\">\r\n                Ustaw nowe hasło\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <form onSubmit={handleSubmit}>\r\n                  <InputLabeled\r\n                    label=\"Hasło\"\r\n                    name=\"password\"\r\n                    handleChange={handleChange}\r\n                    big={true}\r\n                    value={user.password}\r\n                    type=\"password\"\r\n                    required={true}\r\n                    autoComplete=\"new-password\"\r\n                  />\r\n                  <InputLabeled\r\n                    label=\"Powtórz hasło\"\r\n                    name=\"password2\"\r\n                    handleChange={handleChange}\r\n                    big={true}\r\n                    value={user.password2}\r\n                    type=\"password\"\r\n                    required={true}\r\n                    autoComplete=\"new-password\"\r\n                  />\r\n                  {error && <p>{`${error}`}</p>}\r\n                  {loading && (\r\n                    <div>\r\n                      <Spinner\r\n                        animation=\"border\"\r\n                        variant=\"secondary\"\r\n                        size=\"lg\"\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  <Button\r\n                    className={\"px-4 mt-2\"}\r\n                    variant=\"success\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Zapisz nowe hasło\r\n                  </Button>\r\n                </form>\r\n              </Card.Body>\r\n              <Card.Footer className=\"text-muted\">\r\n                {`Masz konto - `}\r\n                <a\r\n                  role=\"button\"\r\n                  className=\"a\"\r\n                  onClick={() => navigate(`/login`)}\r\n                >\r\n                  zaloguj się\r\n                </a>\r\n              </Card.Footer>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordPage;\r\n"],"names":["ResetPasswordPage","props","navigate","useNavigate","useState","token","useLocation","search","username","password","password2","user","setUser","error","setError","loading","setLoading","handleChange","event","target","name","value","className","onSubmit","preventDefault","axios","backendUrl","then","res","status","data","catch","err","response","label","big","type","required","autoComplete","animation","variant","size","role","onClick"],"sourceRoot":""}