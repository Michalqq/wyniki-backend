{"version":3,"file":"main.d75d501a9f3adeb2e9ab.js","mappings":"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","sources":["webpack://javascript/./src/components/tables/PenaltyTable.jsx","webpack://javascript/./src/components/tables/DisqualificationTable.jsx","webpack://javascript/./src/components/scores/CompareScoresModal.jsx","webpack://javascript/./src/components/page/StageScorePage.jsx"],"sourcesContent":["/* eslint-disable react/display-name */\r\nimport React, { useMemo, useEffect, useState } from \"react\";\r\nimport ResultTable from \"../common/table/ResultTable\";\r\nimport { TeamDiv } from \"../common/Div\";\r\nimport { NrBadge } from \"../common/NrBadge\";\r\nimport axios from \"axios\";\r\nimport { backendUrl } from \"../utils/fetchUtils\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport authHeader from \"../../service/auth-header\";\r\n\r\nconst PenaltyTable = (props) => {\r\n  const [penalties, setPenalties] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const fetchPenalties = () => {\r\n    axios\r\n      .get(`${backendUrl()}/penalty/getPenalties?eventId=${props.eventId}`)\r\n      .then((res) => {\r\n        setPenalties(res.data);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const removePenalty = (penaltyId) => {\r\n    axios\r\n      .post(\r\n        `${backendUrl()}/penalty/removePenalty?penaltyId=${penaltyId}`,\r\n        {},\r\n        {\r\n          headers: authHeader(),\r\n        }\r\n      )\r\n      .then((res) => {\r\n        props.onRemove();\r\n        fetchPenalties();\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPenalties();\r\n  }, []);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        width: \"20%\",\r\n        id: \"team\",\r\n        Header: \"Załoga\",\r\n        disableFilters: true,\r\n        disableSortBy: true,\r\n        Cell: (cellInfo) => (\r\n          <>\r\n            <div className=\"py-1 px-2 mx-1 d-grid\">\r\n              <NrBadge value={cellInfo.row.original.number}></NrBadge>\r\n            </div>\r\n            <div className=\"px-1 mx-1 d-grid\">\r\n              <TeamDiv team={cellInfo.row.original} />\r\n            </div>\r\n          </>\r\n        ),\r\n      },\r\n      {\r\n        width: \"70%\",\r\n        id: \"penalty\",\r\n        Header: \"Czas - Powód - OS/PS\",\r\n        disableFilters: true,\r\n        disableSortBy: true,\r\n        Cell: (cellInfo) => (\r\n          <table className=\"font14\">\r\n            {cellInfo.row.original.penalties.map((penalty) => (\r\n              <>\r\n                <tr>\r\n                  <td className=\"text-left fw-bolder\" style={{ width: \"20%\" }}>\r\n                    {penalty.description !== \"Taryfa\"\r\n                      ? penalty.penaltySec + \" s\"\r\n                      : \"\"}\r\n                  </td>\r\n                  <td className=\"text-left px-3\" style={{ width: \"45%\" }}>\r\n                    {penalty.description}\r\n                  </td>\r\n                  <td className=\"text-left px-3\" style={{ width: \"40%\" }}>\r\n                    {penalty.name}\r\n                  </td>\r\n                  <td style={{ width: \"15%\" }}>\r\n                    {props.referee ? (\r\n                      <FontAwesomeIcon\r\n                        icon={faTimesCircle}\r\n                        onClick={() => removePenalty(penalty.penaltyId)}\r\n                        title={\"Usuń kare\"}\r\n                      />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              </>\r\n            ))}\r\n          </table>\r\n        ),\r\n      },\r\n    ],\r\n    [props.referee]\r\n  );\r\n\r\n  return (\r\n    <ResultTable\r\n      columns={columns}\r\n      data={penalties}\r\n      pageCount={3}\r\n      isLoading={isLoading}\r\n      isFooter={false}\r\n      isHeader={true}\r\n      cursor={\"pointer\"}\r\n      manualPagination={true}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PenaltyTable;\r\n","/* eslint-disable react/display-name */\r\nimport React, { useMemo, useEffect, useState } from \"react\";\r\nimport ResultTable from \"../common/table/ResultTable\";\r\nimport { TeamDiv } from \"../common/Div\";\r\nimport axios from \"axios\";\r\nimport { backendUrl } from \"../utils/fetchUtils\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport authHeader from \"../../service/auth-header\";\r\nimport { NrBadge } from \"../common/NrBadge\";\r\n\r\nconst DisqualificationTable = (props) => {\r\n  const [penalties, setPenalties] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const fetchPenalties = () => {\r\n    axios\r\n      .get(\r\n        `${backendUrl()}/penalty/getDisqualifications?eventId=${props.eventId}`\r\n      )\r\n      .then((res) => {\r\n        setPenalties(res.data);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const removePenalty = (penaltyId) => {\r\n    axios\r\n      .post(\r\n        `${backendUrl()}/penalty/removeDisqualification?penaltyId=${penaltyId}`,\r\n        {},\r\n        {\r\n          headers: authHeader(),\r\n        }\r\n      )\r\n      .then((res) => {\r\n        setIsLoading(true);\r\n        props.onRemove();\r\n        fetchPenalties();\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPenalties();\r\n  }, []);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        width: \"5%\",\r\n        id: \"nr\",\r\n        Header: \"Nr\",\r\n        accessor: (cellInfo) => cellInfo.number,\r\n        disableFilters: true,\r\n        disableSortBy: true,\r\n        Cell: (row) => <NrBadge value={row.value}></NrBadge>,\r\n      },\r\n      {\r\n        width: \"20%\",\r\n        id: \"team\",\r\n        Header: \"Załoga\",\r\n        disableFilters: true,\r\n        disableSortBy: true,\r\n        Cell: (cellInfo) => <TeamDiv team={cellInfo.row.original} />,\r\n      },\r\n      {\r\n        width: \"60%\",\r\n        id: \"penalty\",\r\n        Header: \"Powód - OS/PS\",\r\n        disableFilters: true,\r\n        disableSortBy: true,\r\n        Cell: (cellInfo) => (\r\n          <table className=\"font14\">\r\n            {cellInfo.row.original.penalties.map((penalty) => (\r\n              <>\r\n                <tr>\r\n                  <td className=\"text-left fw-bolder\"></td>\r\n                  <td className=\"text-left px-3 width-300\">\r\n                    {penalty.description}\r\n                  </td>\r\n                  <td className=\"text-left px-3\">{penalty.name}</td>\r\n                  <td>\r\n                    {props.referee ? (\r\n                      <FontAwesomeIcon\r\n                        icon={faTimesCircle}\r\n                        onClick={() => removePenalty(penalty.penaltyId)}\r\n                        title={\"Wycofaj dyskwalifikacje\"}\r\n                      />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              </>\r\n            ))}\r\n          </table>\r\n        ),\r\n      },\r\n    ],\r\n    [props.referee]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <ResultTable\r\n        columns={columns}\r\n        data={penalties}\r\n        pageCount={3}\r\n        isLoading={isLoading}\r\n        isFooter={false}\r\n        isHeader={true}\r\n        cursor={\"pointer\"}\r\n        manualPagination={true}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DisqualificationTable;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { backendUrl, fetchGetCompareScores } from \"../utils/fetchUtils\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { closeOnBack, timeToString } from \"../utils/utils\";\r\nimport { CarDiv, ScoreDiv, ScoreDivPenalty, TeamDiv } from \"../common/Div\";\r\nimport { NrBadge } from \"../common/NrBadge\";\r\n\r\nexport const CompareScoresModal = ({\r\n  show,\r\n  handleClose,\r\n  eventId,\r\n  markedNumbers,\r\n  psOptions,\r\n}) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [scores, setScores] = useState([]);\r\n  const [teams, setTeams] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!show) return;\r\n\r\n    closeOnBack(handleClose);\r\n    if (markedNumbers.length === 2) {\r\n      fetchTeams();\r\n      fetchGetCompareScores(eventId, markedNumbers, (data) => {\r\n        setScores(data);\r\n      });\r\n    }\r\n  }, [show]);\r\n\r\n  const fetchTeams = () => {\r\n    if (eventId === undefined) return;\r\n    axios\r\n      .get(`${backendUrl()}/event/getBasicTeams?eventId=${eventId}`)\r\n      .then((res) => {\r\n        setTeams(res.data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (teams.length > 0 && scores.length > 0) {\r\n      setLoading(false);\r\n    }\r\n  }, [teams, scores]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        size=\"xl\"\r\n      >\r\n        <Modal.Header closeButton className=\"bg-dark-green text-white\">\r\n          <Modal.Title className=\"text-white\">{`Porównanie wyników`}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"my-px-3\">\r\n          {loading ? (\r\n            <div className=\"text-center\">\r\n              <Spinner animation=\"border\" variant=\"secondary\" size=\"lg\" />\r\n            </div>\r\n          ) : markedNumbers.length !== 2 ? (\r\n            <h6 className=\"text-center pt-3\">\r\n              {markedNumbers.length < 2\r\n                ? \"Zaznacz 2 zawodników klikając na pomarańczowy numer startowy!\"\r\n                : `Porównanie możliwe tylko dla 2 zawodników - zaznaczyłeś ${markedNumbers.length}`}\r\n            </h6>\r\n          ) : (\r\n            <div>\r\n              <div className=\"row pt-0 my-px-3 bg-light\">\r\n                {markedNumbers.map((number) => {\r\n                  const eventTeam = teams.find((x) => x.number === number);\r\n                  return (\r\n                    <div className=\"col p-1 ps-4\" style={{ scale: \"1.1\" }}>\r\n                      {eventTeam && (\r\n                        <div className=\"d-flex\">\r\n                          <div className=\"align-self-center pe-2\">\r\n                            <NrBadge value={number}></NrBadge>\r\n                          </div>\r\n                          <TeamDiv\r\n                            team={{\r\n                              driver: eventTeam.driver,\r\n                              coDriver: eventTeam.coDriver,\r\n                              club: eventTeam.club,\r\n                              coClub: eventTeam.coClub,\r\n                              teamName: eventTeam.teamName,\r\n                            }}\r\n                          ></TeamDiv>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              <div\r\n                className=\"row pt-0 my-px-3\"\r\n                style={{ backgroundColor: \"lightgray\" }}\r\n              >\r\n                {markedNumbers\r\n                  .sort((a, b) => (a < b ? -1 : 1))\r\n                  .map((number) => {\r\n                    const eventTeam = teams.find((x) => x.number === number);\r\n                    const car = eventTeam?.car;\r\n                    return (\r\n                      <div className=\"col p-3 ps-4\" style={{ scale: \"1.1\" }}>\r\n                        {eventTeam && (\r\n                          <CarDiv\r\n                            line1={\r\n                              (car?.brand || \"\") + \" \" + (car?.model || \"\")\r\n                            }\r\n                            line2={eventTeam.carClass?.name}\r\n                            carBrand={car?.brand}\r\n                            driveType={car?.driveTypeEnum}\r\n                          ></CarDiv>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </div>\r\n              <div className=\"row pt-1 px-3\">\r\n                <table className=\"table table-stripe\">\r\n                  <thead className=\"thead-dark\">\r\n                    <tr>\r\n                      <th style={{ width: \"10%\" }}>PS</th>\r\n                      <th\r\n                        style={{ width: \"30%\" }}\r\n                        className=\"text-end\"\r\n                      >{`Załoga nr ${markedNumbers[0]}`}</th>\r\n                      <th style={{ width: \"10%\" }} className=\"text-center\">\r\n                        Różnica\r\n                      </th>\r\n                      <th className=\"text-start\">{`Załoga nr ${markedNumbers[1]}`}</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {psOptions.map((psOption, i) => {\r\n                      const bg = i % 2 === 0 ? \"bg-light-gray \" : \"\";\r\n                      let scoresLine = scores\r\n                        .filter((x) => x.stageId === Number(psOption.value))\r\n                        .sort((a, b) => (a.teamNumber < b.teamNumber ? -1 : 1));\r\n\r\n                      let totalScore1 =\r\n                        scoresLine[0]?.score + scoresLine[0]?.penalty * 1000;\r\n                      let totalScore2 =\r\n                        scoresLine[1]?.score + scoresLine[1]?.penalty * 1000;\r\n\r\n                      return (\r\n                        <>\r\n                          <tr className={bg}>\r\n                            <th className=\"p-1\">\r\n                              <div style={{ marginRight: \"auto\" }}>\r\n                                <ScoreDivPenalty\r\n                                  line1={\"PS \" + (i + 1)}\r\n                                  line2={\"0\"}\r\n                                />\r\n                              </div>\r\n                            </th>\r\n                            {scoresLine.length == 2 && (\r\n                              <>\r\n                                <th\r\n                                  className={\r\n                                    \"text-end \" +\r\n                                    (totalScore1 < totalScore2\r\n                                      ? \"text-success\"\r\n                                      : \"fw-normal\")\r\n                                  }\r\n                                >\r\n                                  <ScoreDivPenalty\r\n                                    line1={timeToString(scoresLine[0].score)}\r\n                                    line2={\r\n                                      scoresLine[0].penalty === 0\r\n                                        ? \"0\"\r\n                                        : scoresLine[0].penalty\r\n                                    }\r\n                                  />\r\n                                </th>\r\n                                <th className={\"text-center\"}>\r\n                                  <ScoreDiv\r\n                                    line1=\"\"\r\n                                    line2=\"\"\r\n                                    line3={timeToString(\r\n                                      Math.abs(totalScore1 - totalScore2)\r\n                                    )}\r\n                                  />\r\n                                </th>\r\n                                <th\r\n                                  className={\r\n                                    totalScore1 > totalScore2\r\n                                      ? \"text-success\"\r\n                                      : \"fw-normal\"\r\n                                  }\r\n                                >\r\n                                  <ScoreDivPenalty\r\n                                    line1={timeToString(scoresLine[1].score)}\r\n                                    line2={\r\n                                      scoresLine[1].penalty === 0\r\n                                        ? \"0\"\r\n                                        : scoresLine[1].penalty\r\n                                    }\r\n                                  />\r\n                                </th>\r\n                              </>\r\n                            )}\r\n                          </tr>\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer className={\"justify-content-center\"}>\r\n          <div className=\"d-flex\">\r\n            <Button className={\"m-1\"} variant=\"secondary\" onClick={handleClose}>\r\n              Wyjdź\r\n            </Button>\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","/* eslint-disable react/display-name */\r\nimport React, { useState, useMemo, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport ResultTable from \"../common/table/ResultTable\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { ScoreDiv, ScoreDivPenalty, TeamDiv, CarDiv } from \"../common/Div\";\r\nimport { Selector } from \"../common/Selector\";\r\nimport { backendUrl, checkReferee, fetchPsOptions } from \"../utils/fetchUtils\";\r\nimport PenaltyTable from \"../tables/PenaltyTable\";\r\nimport DisqualificationTable from \"../tables/DisqualificationTable\";\r\nimport { NrBadge } from \"../common/NrBadge\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { MyButton } from \"../common/Button\";\r\nimport { calcTimeTo } from \"../utils/utils\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport { CompareScoresModal } from \"../scores/CompareScoresModal\";\r\nimport {\r\n  useGetScoresQuery,\r\n  useGetSummedScoresQuery,\r\n} from \"../../service/rtk-fetch-api\";\r\n\r\nconst StageScorePage = (props) => {\r\n  const [activeTab, setActiveTab] = useState(1);\r\n  const [markedNumbers, setMarkedNumbers] = useState([]);\r\n  const [showCompareScoresModal, setShowCompareScoresModal] = useState(false);\r\n  const location = useLocation();\r\n  const eventRedirect = useLocation().search;\r\n  const index = eventRedirect.includes(\"&\")\r\n    ? eventRedirect.indexOf(\"&\")\r\n    : eventRedirect.length;\r\n  const eventFromRedirect = eventRedirect.substring(0, index).replace(\"?\", \"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const eventId = eventFromRedirect\r\n    ? eventFromRedirect\r\n    : localStorage.getItem(\"eventId\") || location.state?.eventId;\r\n\r\n  const GENERAL = \"GENERALNA\";\r\n  const GUEST = \"GOŚĆ\";\r\n\r\n  const [event, setEvent] = useState();\r\n\r\n  // const [scores, setScores] = useState([]);\r\n  const [scoresByClass, setScoresByClass] = useState([]);\r\n  const [referee, setReferee] = useState(false);\r\n\r\n  // const [summedScores, setSummedScores] = useState([]);\r\n  const [summedScoresByClass, setSummedScoresByClass] = useState([]);\r\n\r\n  const [psOptions, setPsOptions] = useState([]);\r\n  const [classesOptions, setClassesOptions] = useState([]);\r\n\r\n  const [currentClass, setCurrentClass] = useState(GENERAL);\r\n  const [stage, setStage] = useState();\r\n\r\n  const [stageName, setStageName] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadingScoreFile, setLoadingScoreFile] = useState(false);\r\n\r\n  const {\r\n    data: scores = [],\r\n    isFetching,\r\n    refetch: scoresRefetch,\r\n  } = useGetScoresQuery(stage, {\r\n    skip: stage === undefined,\r\n  });\r\n\r\n  const {\r\n    data: summedScores = [],\r\n    isFetching: summedScoresFetching,\r\n    refetch: summedScoreRefetch,\r\n  } = useGetSummedScoresQuery(\r\n    { eventId: eventId, stageId: stage },\r\n    {\r\n      skip: stage === undefined || eventId === undefined,\r\n    }\r\n  );\r\n\r\n  const fetchPsOptionsFnc = () => {\r\n    fetchPsOptions(eventId, (data) => {\r\n      setPsOptions(data.psOptions || []);\r\n      setClassesOptions(data.classesOptions || []);\r\n    });\r\n  };\r\n\r\n  const fetchEvent = () => {\r\n    axios\r\n      .get(`${backendUrl()}/event/getBasicEvent?eventId=${eventId}`)\r\n      .then((res) => {\r\n        setEvent({\r\n          ...res.data,\r\n          date: new Date(res.data.date),\r\n          signDeadline: new Date(res.data.signDeadline),\r\n        });\r\n      });\r\n  };\r\n\r\n  const fetchData = () => {\r\n    if (stage !== undefined) {\r\n      fetchEvent();\r\n    }\r\n  };\r\n\r\n  const getScoresFile = () => {\r\n    // setLoadingScoreFile(true);\r\n    window.open(\r\n      `${backendUrl()}/file/getScoresFile?eventId=${eventId}`,\r\n      \"_blank\"\r\n    );\r\n    // download(\r\n    //   `${backendUrl()}/file/getScoresFile?eventId=${eventId}`,\r\n    //   \"wyniki_\" + event.name + \".xlsx\",\r\n    //   () => setLoadingScoreFile(false)\r\n    // );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (eventId === undefined) navigate(\"/\");\r\n    checkReferee(eventId, setReferee);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    setScoresByClass([]);\r\n    setSummedScoresByClass([]);\r\n  }, [stage]);\r\n\r\n  useEffect(() => {\r\n    fetchPsOptionsFnc();\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isFetching || scores.length === 0) return;\r\n\r\n    const tempScores =\r\n      currentClass === `${GENERAL}+${GUEST}`\r\n        ? scores\r\n        : currentClass === GENERAL\r\n        ? scores.filter((x) => x.className !== GUEST)\r\n        : scores.filter(\r\n            (x) => x.className === currentClass || x.driveType === currentClass\r\n          );\r\n\r\n    setScoresByClass(calcTimeTo(tempScores));\r\n  }, [scores, currentClass]);\r\n\r\n  useEffect(() => {\r\n    if (summedScoresFetching || summedScores.length === 0) return;\r\n\r\n    let tempScores =\r\n      currentClass === `${GENERAL}+${GUEST}`\r\n        ? summedScores\r\n        : currentClass === GENERAL\r\n        ? summedScores.filter((x) => x.className !== GUEST)\r\n        : summedScores.filter(\r\n            (x) => x.className === currentClass || x.driveType === currentClass\r\n          );\r\n\r\n    setSummedScoresByClass(calcTimeTo(tempScores));\r\n  }, [summedScores, currentClass]);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        width: \"5%\",\r\n        id: \"place\",\r\n        Header: \"P.\",\r\n        accessor: (cellInfo) => cellInfo.place,\r\n        disableFilters: true,\r\n        disableSortBy: true,\r\n        Cell: (row) => <> {row.row.index + 1}</>,\r\n      },\r\n      {\r\n        width: \"7%\",\r\n        id: \"nr\",\r\n        Header: \"Nr\",\r\n        accessor: (cellInfo) => cellInfo.number,\r\n        disableFilters: true,\r\n        disableSortBy: true,\r\n        Cell: (row) => (\r\n          <NrBadge\r\n            value={row.value}\r\n            isBold={markedNumbers.includes(row.value)}\r\n            onClick={() => handleMarked(row.value)}\r\n          ></NrBadge>\r\n        ),\r\n      },\r\n      {\r\n        width: \"30%\",\r\n        id: \"team\",\r\n        Header: \"Załoga\",\r\n        disableFilters: true,\r\n        disableSortBy: true,\r\n        Cell: (cellInfo) => <TeamDiv team={cellInfo.row.original} />,\r\n      },\r\n      {\r\n        width: \"30%\",\r\n        id: \"car\",\r\n        Header: \"Samochód\",\r\n        disableFilters: true,\r\n        disableSortBy: true,\r\n        Cell: (cellInfo) => (\r\n          <CarDiv\r\n            line1={cellInfo.row.original.car}\r\n            line2={cellInfo.row.original.className}\r\n            carBrand={cellInfo.row.original.brand}\r\n            driveType={cellInfo.row.original.driveType}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        width: \"15%\",\r\n        id: \"score\",\r\n        Header: \"Czas / kary\",\r\n        accessor: (cellInfo) => cellInfo.stageScore,\r\n        disableFilters: true,\r\n        disableSortBy: true,\r\n        Cell: (cellInfo) => (\r\n          <ScoreDivPenalty\r\n            line1={cellInfo.row.original.stageScore}\r\n            line2={cellInfo.row.original.totalPenalty}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        width: \"15%\",\r\n        id: \"result\",\r\n        Header: \"Wynik / straty\",\r\n        accessor: (cellInfo) => cellInfo.stageScore,\r\n        disableFilters: true,\r\n        disableSortBy: true,\r\n        Cell: (cellInfo) => (\r\n          <ScoreDiv\r\n            line1={cellInfo.row.original.totalTime}\r\n            line2={cellInfo.row.original.timeTo}\r\n            line3={cellInfo.row.original.timeToFirst}\r\n          />\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const handleMarked = (number) => {\r\n    if (!markedNumbers.includes(number)) markedNumbers.push(number);\r\n    else markedNumbers.splice(markedNumbers.indexOf(number), 1);\r\n\r\n    setMarkedNumbers(Array.from(markedNumbers));\r\n  };\r\n\r\n  const highlightRow = (row) => {\r\n    if (markedNumbers.includes(row.values.nr)) return \"#c9e9a7\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row card-body mx-0\">\r\n        <h4>{event?.name || \"\"}</h4>\r\n        <div className=\"col-xl-8 d-flex justify-content-center\">\r\n          {(event?.logoPathFile || event?.logoPath) && (\r\n            <div className=\"col-6 align-self-center\">\r\n              <div className=\"m-0 text-center\">\r\n                {event.logoPathFile ? (\r\n                  <img\r\n                    id={\"eventImage\" + event.eventId}\r\n                    style={{ maxHeight: \"150px\" }}\r\n                    className=\"img-fluid rounded float-left\"\r\n                    src={\"data:image/jpg;base64,\" + event.logoPathFile}\r\n                    alt=\"Logo\"\r\n                  ></img>\r\n                ) : (\r\n                  <img\r\n                    style={{ maxHeight: \"150px\" }}\r\n                    className=\"img-fluid rounded float-left\"\r\n                    src={event.logoPath}\r\n                    alt=\"Logo\"\r\n                  ></img>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div className=\"col-6\">\r\n            <Selector\r\n              label={\"Klasyfikacja\"}\r\n              options={classesOptions}\r\n              handleChange={(value) => {\r\n                setCurrentClass(\r\n                  classesOptions.find((e) => e.value === value).label\r\n                );\r\n              }}\r\n              isValid={true}\r\n            />\r\n            <Selector\r\n              label={\"PS\"}\r\n              options={psOptions}\r\n              value={sessionStorage.getItem(\"scoreStageId\")}\r\n              handleChange={(value) => {\r\n                setStage(value);\r\n                setStageName(psOptions.find((e) => e.value === value).label);\r\n                sessionStorage.setItem(\"scoreStageId\", value);\r\n              }}\r\n              isValid={true}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-4\">\r\n          <div className=\"m-2 text-center\">\r\n            {referee && (\r\n              <>\r\n                <Button\r\n                  className={\"m-1\"}\r\n                  variant=\"success\"\r\n                  onClick={() =>\r\n                    navigate(`/add_score`, {\r\n                      state: { eventId: eventId },\r\n                    })\r\n                  }\r\n                >\r\n                  Dodaj wynik\r\n                </Button>\r\n                <Button\r\n                  className={\"m-1\"}\r\n                  variant=\"primary\"\r\n                  onClick={() =>\r\n                    navigate(`/add_penalty`, {\r\n                      state: { eventId: eventId },\r\n                    })\r\n                  }\r\n                >\r\n                  Dodaj kare\r\n                </Button>\r\n                <MyButton\r\n                  variant=\"secondary\"\r\n                  isLoading={loadingScoreFile}\r\n                  onClick={() => getScoresFile()}\r\n                  msg=\"Generuj plik z zestawieniem wyników\"\r\n                  loadingMsg=\"Trwa generowanie\r\n                  pliku z wynikami\"\r\n                />\r\n              </>\r\n            )}\r\n            <Button\r\n              className={\"m-1\"}\r\n              variant=\"primary\"\r\n              onClick={() => {\r\n                summedScoreRefetch();\r\n                scoresRefetch();\r\n              }}\r\n            >\r\n              Odśwież\r\n            </Button>\r\n            <Button\r\n              className={\"m-1\"}\r\n              variant=\"success\"\r\n              onClick={() => setShowCompareScoresModal(true)}\r\n            >\r\n              Porównaj wyniki\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row pt-0 mx-0 card-body\">\r\n        <div\r\n          className=\"fw-bold alert alert-secondary p-1 mb-2\"\r\n          role=\"alert\"\r\n        >{`${stageName}`}</div>\r\n        <Tabs\r\n          activeKey={activeTab}\r\n          onSelect={(key) => setActiveTab(key)}\r\n          className=\"mb-1 fw-bold text-dark device-small\"\r\n        >\r\n          <Tab eventKey={1} title=\"Czas NA\" className=\"custom-tab\">\r\n            <div className=\"my-pe-1\">\r\n              <div className=\"shadow bg-body rounded\">\r\n                <ResultTable\r\n                  columns={columns}\r\n                  data={scoresByClass}\r\n                  pageCount={3}\r\n                  isLoading={isFetching}\r\n                  isFooter={false}\r\n                  isHeader={true}\r\n                  cursor={\"pointer\"}\r\n                  manualPagination={true}\r\n                  highlightRow={(row) => highlightRow(row)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey={2} title=\"Suma PO\" className=\"custom-tab\">\r\n            <div className=\"my-ps-1\">\r\n              <div className=\"shadow bg-body rounded\">\r\n                <ResultTable\r\n                  columns={columns}\r\n                  data={summedScoresByClass}\r\n                  pageCount={3}\r\n                  isLoading={summedScoresFetching}\r\n                  isFooter={false}\r\n                  isHeader={true}\r\n                  cursor={\"pointer\"}\r\n                  manualPagination={true}\r\n                  highlightRow={(row) => highlightRow(row)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Tab>\r\n        </Tabs>\r\n        <div className=\"col-xl-12 px-1\">\r\n          <div className=\"shadow bg-body rounded mt-4 p-0\">\r\n            <div className=\"fw-bold alert alert-secondary p-1 m-0\" role=\"alert\">\r\n              {\"Kary\"}\r\n            </div>\r\n            <PenaltyTable\r\n              eventId={eventId}\r\n              onRemove={fetchData}\r\n              referee={referee}\r\n            />\r\n          </div>\r\n          <div className=\"shadow bg-body rounded mt-4\">\r\n            <div className=\"fw-bold alert alert-secondary p-1 m-0\" role=\"alert\">\r\n              {`Dyskwalifikacje / Wycofania`}\r\n            </div>\r\n            <DisqualificationTable\r\n              eventId={eventId}\r\n              onRemove={fetchData}\r\n              referee={referee}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showCompareScoresModal && (\r\n        <CompareScoresModal\r\n          show={true}\r\n          handleClose={() => setShowCompareScoresModal()}\r\n          eventId={eventId}\r\n          markedNumbers={markedNumbers}\r\n          psOptions={psOptions}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StageScorePage;\r\n"],"names":["props","useState","penalties","setPenalties","isLoading","setIsLoading","fetchPenalties","axios","backendUrl","eventId","then","res","data","useEffect","columns","useMemo","width","id","Header","disableFilters","disableSortBy","Cell","cellInfo","className","NrBadge","value","row","original","number","team","map","penalty","style","description","penaltySec","name","referee","icon","faTimesCircle","onClick","penaltyId","headers","authHeader","onRemove","title","ResultTable","pageCount","isFooter","isHeader","cursor","manualPagination","accessor","CompareScoresModal","show","handleClose","markedNumbers","psOptions","loading","setLoading","scores","setScores","teams","setTeams","closeOnBack","length","fetchTeams","fetchGetCompareScores","undefined","Modal","onHide","backdrop","keyboard","size","closeButton","Spinner","animation","variant","eventTeam","find","x","scale","driver","coDriver","club","coClub","teamName","backgroundColor","sort","a","b","car","line1","brand","model","line2","carClass","carBrand","driveType","driveTypeEnum","psOption","i","bg","scoresLine","filter","stageId","Number","teamNumber","totalScore1","score","totalScore2","marginRight","timeToString","line3","Math","abs","Button","activeTab","setActiveTab","setMarkedNumbers","showCompareScoresModal","setShowCompareScoresModal","location","useLocation","eventRedirect","search","index","includes","indexOf","eventFromRedirect","substring","replace","navigate","useNavigate","localStorage","getItem","state","GENERAL","GUEST","event","setEvent","scoresByClass","setScoresByClass","setReferee","summedScoresByClass","setSummedScoresByClass","setPsOptions","classesOptions","setClassesOptions","currentClass","setCurrentClass","stage","setStage","stageName","setStageName","loadingScoreFile","useGetScoresQuery","skip","isFetching","scoresRefetch","refetch","useGetSummedScoresQuery","summedScores","summedScoresFetching","summedScoreRefetch","fetchData","date","Date","signDeadline","checkReferee","fetchPsOptions","tempScores","calcTimeTo","place","isBold","handleMarked","stageScore","totalPenalty","totalTime","timeTo","timeToFirst","splice","push","Array","from","highlightRow","values","nr","logoPathFile","logoPath","maxHeight","src","alt","Selector","label","options","handleChange","e","isValid","sessionStorage","setItem","window","open","msg","loadingMsg","role","Tabs","activeKey","onSelect","key","Tab","eventKey"],"sourceRoot":""}