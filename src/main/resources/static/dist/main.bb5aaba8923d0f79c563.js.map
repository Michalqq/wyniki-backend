{"version":3,"file":"main.bb5aaba8923d0f79c563.js","mappings":"s2DAQO,IAAMA,EAAc,SAACC,GAC1B,SAAsBC,EAAAA,EAAAA,UAAS,CAC7BC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,QAAS,KAJX,GAAOC,EAAP,KAAYC,EAAZ,KAMA,KAA0BN,EAAAA,EAAAA,YAA1B,GAAOO,EAAP,KAAcC,EAAd,KACA,KAA8BR,EAAAA,EAAAA,WAAS,GAAvC,GAAOS,EAAP,KAAgBC,EAAhB,KAiBMC,EAAe,SAACC,GACpBN,EAAO,EAAD,KAAMD,GAAN,QAAYO,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,UAYrD,OACE,uBAAKC,UAAU,2BACb,uBAAKA,UAAU,gBACb,uBAAKA,UAAU,8BACb,uBAAKA,UAAU,8BACb,gBAAC,IAAD,CAAMA,UAAU,eACd,gBAAC,WAAD,CAAaA,UAAU,4BAAvB,oBAGA,gBAAC,SAAD,KACE,wBAAMC,SApBC,SAACL,GACpBA,EAAMM,iBACDb,EAAIJ,MAAMkB,SAAS,IAAK,MAnB7BT,GAAW,GACXF,IACAY,IAAAA,KAAA,WACWC,EAAAA,EAAAA,MADX,oBAC2ChB,GACxCiB,MAAK,SAACC,GACLf,EAASe,EAAIC,MACbd,GAAW,MAEZe,OAAM,SAACC,GACNlB,EAASkB,EAAIC,SAASH,MACtBd,GAAW,OAUbF,EACE,0EAiBU,gBAAC,IAAD,CACEoB,MAAM,QACNd,KAAK,QACLH,aAAcA,EACdkB,KAAK,EACLd,MAAOV,EAAIF,MACX2B,UAAU,IAEZ,gBAAC,IAAD,CACEF,MAAM,6BACNd,KAAK,QACLH,aAAcA,EACdkB,KAAK,EACLd,MAAOV,EAAIJ,MACX6B,UAAU,EACVC,aAAa,iBAEf,gBAAC,IAAD,CACEH,MAAM,wBACNd,KAAK,QACLkB,KAAK,SACLrB,aAAcA,EACdkB,KAAK,EACLd,MAAOV,EAAIH,MACX4B,UAAU,EACVC,aAAa,iBAEf,gBAAC,IAAD,CACEH,MAAM,YACNd,KAAK,UACLH,aAAcA,EACdkB,KAAK,EACLd,MAAOV,EAAID,QACX0B,UAAU,EACVG,UAAW,IAEZ1B,GAAS,mCAAOA,IAChBE,GACC,2BACE,gBAAC,IAAD,CACEyB,UAAU,SACVC,QAAQ,YACRC,KAAK,QAIX,gBAAC,IAAD,CACEpB,UAAW,YACXmB,QAAQ,UACRH,KAAK,UAHP,sBASJ,gBAAC,WAAD,CAAahB,UAAU,cAAvB,oEAWd","sources":["webpack://javascript/./src/components/page/MessagePage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { InputLabeled } from \"../common/InputLabeled\";\r\nimport { backendUrl } from \"../utils/fetchUtils\";\r\n\r\nexport const MessagePage = (props) => {\r\n  const [msg, setMsg] = useState({\r\n    email: \"\",\r\n    phone: \"\",\r\n    title: \"\",\r\n    message: \"\",\r\n  });\r\n  const [error, setError] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const updatePassword = () => {\r\n    setLoading(true);\r\n    setError();\r\n    axios\r\n      .post(`${backendUrl()}/message/sendMsg`, msg)\r\n      .then((res) => {\r\n        setError(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setError(err.response.data);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setMsg({ ...msg, [event.target.name]: event.target.value });\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (!msg.email.includes(\".\", \"@\")) {\r\n      setError(\r\n        \"Wprowadź poprawny email - nie będziemy mieli możliwości odpowiedzieć\"\r\n      );\r\n      return;\r\n    }\r\n    updatePassword();\r\n  };\r\n  return (\r\n    <div className=\"u-text-center card-body\">\r\n      <div className=\"u-box-shadow\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-lg-6 pb-3 u-box-shadow\">\r\n            <Card className=\"text-center\">\r\n              <Card.Header className=\"bg-dark-green text-white\">\r\n                Wyślij wiadomość\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <form onSubmit={handleSubmit}>\r\n                  <InputLabeled\r\n                    label=\"Tytuł\"\r\n                    name=\"title\"\r\n                    handleChange={handleChange}\r\n                    big={true}\r\n                    value={msg.title}\r\n                    required={true}\r\n                  />\r\n                  <InputLabeled\r\n                    label=\"Email (gdzie mamy odpisać)\"\r\n                    name=\"email\"\r\n                    handleChange={handleChange}\r\n                    big={true}\r\n                    value={msg.email}\r\n                    required={true}\r\n                    autoComplete=\"new-password\"\r\n                  />\r\n                  <InputLabeled\r\n                    label=\"Telefon (opcjonalnie)\"\r\n                    name=\"phone\"\r\n                    type=\"number\"\r\n                    handleChange={handleChange}\r\n                    big={true}\r\n                    value={msg.phone}\r\n                    required={false}\r\n                    autoComplete=\"new-password\"\r\n                  />\r\n                  <InputLabeled\r\n                    label=\"Wiadomość\"\r\n                    name=\"message\"\r\n                    handleChange={handleChange}\r\n                    big={true}\r\n                    value={msg.message}\r\n                    required={true}\r\n                    multiline={6}\r\n                  />\r\n                  {error && <p>{`${error}`}</p>}\r\n                  {loading && (\r\n                    <div>\r\n                      <Spinner\r\n                        animation=\"border\"\r\n                        variant=\"secondary\"\r\n                        size=\"lg\"\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  <Button\r\n                    className={\"px-4 mt-2\"}\r\n                    variant=\"success\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Wyślij wiadomość\r\n                  </Button>\r\n                </form>\r\n              </Card.Body>\r\n              <Card.Footer className=\"text-muted\">\r\n                Lub po prostu wyślij do nas maila: wynikionline0@gmail.com\r\n              </Card.Footer>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagePage;\r\n"],"names":["MessagePage","props","useState","email","phone","title","message","msg","setMsg","error","setError","loading","setLoading","handleChange","event","target","name","value","className","onSubmit","preventDefault","includes","axios","backendUrl","then","res","data","catch","err","response","label","big","required","autoComplete","type","multiline","animation","variant","size"],"sourceRoot":""}